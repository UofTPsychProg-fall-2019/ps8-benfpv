# our primary dependent variable is D_biep.White_Good_all, but some subjects
# don't have any data. Remove the rows with missing D_biep.White_Good_all entries
tbl_clean <- filter(tbl_clean,D_biep.White_Good_all<0 | D_biep.White_Good_all>0)
# Renaming varialbles  ---------------------------------------------
# next rename variables with more intuitive, short labels
# here are some suggestions (along with variable info)
# id : session_id (subject number)
# gender : genderidentity (gender 1 "Male" 2 "Female" 3 "Trans male/Trans man" 4 "Trans female/Trans woman" 5 "Genderqueer/Gender nonconforming" 6 "A different identity")
# race : raceomb_002 (race: 1 "American Indian" 2 "East Asian" 3 "South Asian" 4 "Hawaiian Pacifica Islander" 5 "black Africian American" 6 "white" 7 "other" 8 "multiracial")
# bias :D_biep.White_Good_all (overall IAT score)
# rt : Mn_RT_all_3467 (overall reaction time)
# edu : edu_14 (education: 1 "elementary" 2 "junior high" 3 "some high school" 4 "HS grad" 5 "some college" 6 "associate's" 7 "bachelor's" 8 "some grad" 9 "MA" 10 "JD" 11 "MD" 12 "PHD" 13 "other advanced" 14 "MBA")
# pol : politicalid_7 (political identification: 1 "strongly conservative 7 "strongly liberal)
# state : STATE
# att : att_7 (race attitude 1 "strongly prefer AA" 7 "strongly prefer white")
# temp_b : tblacks_0to10 (temperature feelings black 1 "extremely cold" 10 "extremly warm")
# temp_w : twhites_0to10 (temperature feelings black 1 "extremely cold" 10 "extremly warm")
tbl_clean <- rename(tbl_clean,id=session_id,race=raceomb_002,bias=D_biep.White_Good_all,rt=Mn_RT_all_3467,edu=edu_14,pol=politicalid_7,state=STATE,att=att_7,temp_b=tblacks_0to10,temp_w=twhites_0to10)
unique(tbl_clean$gender)
unique(tbl_clean$state)
str(2)
str([4])
gender_count <- tbl_clean %>% group_by(gender) %>% tally()
View(gender_count)
sort(gender_count)
sort(gender_count,decreasing)
sort(gender_count,decreasing=FALSE)
View(gender_count)
sort(gender_count,n)
desc(gender_count,n)
desc(gender_count)
arrange(gender_count,n)
arrange(gender_count,n,desc)
arrange(gender_count,n,descending=TRUE)
arrange(gender_count,n)
arrange(gender_count,-n)
gender_count
gender_count <- arrange(gender_count,-n)
View(gender_count)
print(gender_count,1)
print(gender_count(0:2))
print(gender_count,0:2)
print(gender_count[0:2])
gender_count[0:2]
gender_count[0:2,:]
gender_count[0:2,1]
gender_count[0:3,1]
print(gender_count[0:3,1])
mutate(tbl_clean$gender,gender_count[0:3,1])
gender_count[0:3,1]
tbl_clean$gender4 <- gender_count[0:3,1]
tbl_clean$gender
gender_count[4::,1]
gender_count[4:,1]
gender_count[4,1]
gender_count[3,1]
gender_count[4,1]
size(gender_count)
len(gender_count)
length(gender_count)
width(gender_count)
length(gender_count(1))
length(gender_count[1])
dim(gender_count)
dim(1,gender_count)
dim(gender_count,1)
dim(gender_count)(1)
dim(gender_count)
dim(gender_count)[0]
dim(gender_count)
dim_gender_count=dim(gender_count)
dim_gender_count[1]
gender_count[4:dim_gender_count[1],1]
mutate(tbl_clean$gender,3=gender_count[4:dim_gender_count[1],1])
recode(tbl_clean$gender,3=gender_count[4:dim_gender_count[1],1])
tbl_clean$gender4 <- mutate(tbl_clean$gender,3 = gender_count[4:dim_gender_count[1],1])
mutate(tbl_clean$gender,gender_count[4:dim_gender_count[1],1]=3)
tbl_clean$gender,gender_count[4:dim_gender_count[1],1]
mutate(tbl_clean$gender,gender_count[4:dim_gender_count[1],1])
tbl_clean$gender4 <- mutate(tbl_clean$gender,[3]=gender_count[4:dim_gender_count[1],1])
mutate(tbl_clean$gender,3=gender_count[4:dim_gender_count[1],1])
factorVar <- c('id', 'gender')
tbl_clean <- mutate_at(tbl, factorVar, ~factor(.))
factorVar <- c('id', 'gender')
tbl_clean <- mutate_at(tbl_clean, factorVar, ~factor(.))
tbl_clean$gender4 <- mutate(tbl_clean$gender,3=gender_count[4:dim_gender_count[1],1])
tbl_clean$gender4 <- mutate(tbl_clean$gender,str(3)=gender_count[4:dim_gender_count[1],1])
tbl_clean$gender4 <- mutate(tbl_clean$gender,other=gender_count[4:dim_gender_count[1],1])
tbl_clean$gender4 <- mutate(tbl_clean$gender,'other'=gender_count[4:dim_gender_count[1],1])
tbl_clean$gender
tbl_clean$gender4 <- mutate(tbl_clean$gender,'3'=gender_count[4:dim_gender_count[1],1])
mutate(tbl_clean$gender4,'3'=gender_count[4:dim_gender_count[1],1])
tbl_clean$gender4 <- mutate(tbl_clean$gender,'3'=gender_count[4:dim_gender_count[1],1])
recode(tbl_clean$gender,3=gender_count[4:dim_gender_count[1],1])
recode(tbl_clean$gender,gender_count[4:dim_gender_count[1],1]=3)
gender_count[4:dim_gender_count[1],1]
recode(tbl_clean$gender,gender_count[4:dim_gender_count[1],1]=[3])
gender_count[4:dim_gender_count[1],1]
gender_count[4:dim_gender_count[1],1]
recode(tbl_clean$gender,gender_count[4:dim_gender_count[1],1]=[3])
recode(tbl_clean$gender,gender_count[4:dim_gender_count[1],1]=3)
recode(tbl_clean$gender,gender_count[4:dim_gender_count[1],1]=3)
recode(tbl_clean$gender,gender_count[4:dim_gender_count[1],1])
recode(tbl_clean$gender,gender_count[4:dim_gender_count[1],1]=[3])
recode(tbl_clean$gender,gender_count[4:dim_gender_count[1],1]=3)
recode(tbl_clean$gender,gender_count[4:dim_gender_count[1],1]=3)
recode(tbl_clean$gender,gender_count[4:dim_gender_count[1],1]=other)
recode(tbl_clean$gender,gender_count[4:dim_gender_count[1],1]='other')
mutate(tbl_clean$gender,recode(tbl_clean$gender,gender_count[4:dim_gender_count[1],1]=3))
gender_count[4:dim_gender_count[1],1]
tbl_clean$gender,gender_count[4:dim_gender_count[1],1]=3)
recode(tbl_clean$gender,gender_count[4:dim_gender_count[1],1]=3))
recode(tbl_clean$gender,gender_count[4:dim_gender_count[1],1]=3)
tbl_clean$gender(gender_count[4:dim_gender_count[1],1]=3)
tbl_clean$gender(gender_count[4:dim_gender_count[1],1]=3))
gender_count[4:dim_gender_count[1],1]=3)
gender_count[4:dim_gender_count[1],1]=3
(gender_count[4:dim_gender_count[1],1]=[3])
gender_count[4:dim_gender_count[1],1]=[3]
gender_count[4:dim_gender_count[1],1]=3
gender_count[4:dim_gender_count[1],1]=[3]
gender_count[4:dim_gender_count[1],1]=str(3)
gender_count[4:dim_gender_count[1],1]=3
mutate(tbl_clean$gender,3=gender_count[4:dim_gender_count[1],1])
tbl_clean$gender4 <- mutate(tbl_clean$gender,'other'=gender_count[4:dim_gender_count[1],1])
tbl <- read_csv('IAT.csv')
# Removing unnecessary rows and columns  ---------------------------------------------
# This data frame only contains 21 of the 454 available variables, but it's still too much
# use tidyverse functions so that only the following variables are included: 'session_id',"genderidentity","raceomb_002","D_biep.White_Good_all","Mn_RT_all_3467",
#       "edu_14","politicalid_7","STATE","att_7","tblacks_0to10","twhites_0to10","labels"
tbl_clean <- select(tbl,session_id,gender,raceomb_002,D_biep.White_Good_all,Mn_RT_all_3467,edu_14,politicalid_7,STATE,att_7,tblacks_0to10,twhites_0to10,labels)
# next, clean up the rows
# our primary dependent variable is D_biep.White_Good_all, but some subjects
# don't have any data. Remove the rows with missing D_biep.White_Good_all entries
tbl_clean <- filter(tbl_clean,D_biep.White_Good_all<0 | D_biep.White_Good_all>0)
# Renaming varialbles  ---------------------------------------------
# next rename variables with more intuitive, short labels
# here are some suggestions (along with variable info)
# id : session_id (subject number)
# gender : genderidentity (gender 1 "Male" 2 "Female" 3 "Trans male/Trans man" 4 "Trans female/Trans woman" 5 "Genderqueer/Gender nonconforming" 6 "A different identity")
# race : raceomb_002 (race: 1 "American Indian" 2 "East Asian" 3 "South Asian" 4 "Hawaiian Pacifica Islander" 5 "black Africian American" 6 "white" 7 "other" 8 "multiracial")
# bias :D_biep.White_Good_all (overall IAT score)
# rt : Mn_RT_all_3467 (overall reaction time)
# edu : edu_14 (education: 1 "elementary" 2 "junior high" 3 "some high school" 4 "HS grad" 5 "some college" 6 "associate's" 7 "bachelor's" 8 "some grad" 9 "MA" 10 "JD" 11 "MD" 12 "PHD" 13 "other advanced" 14 "MBA")
# pol : politicalid_7 (political identification: 1 "strongly conservative 7 "strongly liberal)
# state : STATE
# att : att_7 (race attitude 1 "strongly prefer AA" 7 "strongly prefer white")
# temp_b : tblacks_0to10 (temperature feelings black 1 "extremely cold" 10 "extremly warm")
# temp_w : twhites_0to10 (temperature feelings black 1 "extremely cold" 10 "extremly warm")
tbl_clean <- rename(tbl_clean,id=session_id,race=raceomb_002,bias=D_biep.White_Good_all,rt=Mn_RT_all_3467,edu=edu_14,pol=politicalid_7,state=STATE,att=att_7,temp_b=tblacks_0to10,temp_w=twhites_0to10)
#  missing values  ---------------------------------------------
summary(tbl_clean)
# some of our variables have missing values that aren't properly coded as missing
# recode missing values in gender and state
tbl_clean$gender <- na_if(tbl_clean$gender,"NA")
tbl_clean$state <- na_if(tbl_clean$state,"NA")
gender_count <- tbl_clean %>% group_by(gender) %>% tally()
# sort the output and then use indexing to print the 3 most common response (not inlcuding missing values)
gender_count <- arrange(gender_count,-n)
print(gender_count[0:3,1])
# create a new variable that recodes gender to have 4 levels: the 3 most common responses and the others collapsed together
# you can use the key provided on line 31 to understand the levels
# check out recode documentation to see if there's a trick for setting defaults values for unspecified rows
# *note that this excercise in data recoding doesn't reflect the instructors' views on gender identities...
dim_gender_count <- dim(gender_count)
tbl_clean$gender4 <- mutate(tbl_clean$gender,'other'=gender_count[4:dim_gender_count[1],1])
# try to convert all variables at once using tidyverse functions
factorVar <- c('id', 'gender')
tbl_clean <- mutate_at(tbl_clean, factorVar, ~factor(.))
gender_count <- tbl_clean %>% group_by(gender) %>% tally()
# sort the output and then use indexing to print the 3 most common response (not inlcuding missing values)
gender_count <- arrange(gender_count,-n)
print(gender_count[0:3,1])
tbl_clean$gender4 <- mutate(tbl_clean$gender,[3]=gender_count[4:dim_gender_count[1],1])
str(3)
tbl_clean$gender4 <- mutate(tbl_clean$gender,str(3)=gender_count[4:dim_gender_count[1],1])
tbl_clean$gender4 <- mutate(tbl_clean$gender,str(3) = gender_count[4:dim_gender_count[1],1])
recode(tbl_clean$gender,str(3)=gender_count[4:dim_gender_count[1],1])
tbl_clean$gender4 <- recode(tbl_clean$gender,gender_count[4:dim_gender_count[1],1]=3)
recode(tbl_clean$gender,gender_count[4:dim_gender_count[1],1]=str(3))
tbl_clean$gender4 <- recode(tbl_clean$gender,str(3)=gender_count[4:dim_gender_count[1],1])
unique(tbl_clean$edu)
tbl_clean$edu7 <- recode(tbl_clean$edu, 1='no highschool', 2='some highschool', 3='highschool graduate', 4='some college', 5='postsecondary degree', 6='masters (MA & MBA)', 7='advanced degree')
tbl_clean$edu7 <- mutate(tbl_clean$edu, 1='no highschool', 2='some highschool', 3='highschool graduate', 4='some college', 5='postsecondary degree', 6='masters (MA & MBA)', 7='advanced degree')
tbl_clean$gender4 <- mutate(tbl_clean$gender,str(3)=gender_count[4:dim_gender_count[1],1])
tbl_clean$gender4 <- mutate(tbl_clean$gender,3=gender_count[4:dim_gender_count[1],1])
library(tidyverse)
tbl_clean$gender4 <- mutate(tbl_clean$gender,3=gender_count[4:dim_gender_count[1],1])
numeric(40)
tbl_clean(tbl_clean$gender==1,tbl_clean$race==6)
mean(tbl_clean$bias(tbl_clean$gender==1,tbl_clean$race==6))
mean(tbl_clean$bias(tbl_clean$gender==1 & tbl_clean$race==6))
tbl_clean$bias(tbl_clean$gender==2 & tbl_clean$race==6)
white_men_bias=mean(tbl_clean$bias(tbl_clean$gender=1 & tbl_clean$race=6))
tbl_clean <- select(tbl,session_id,gender,raceomb_002,D_biep.White_Good_all,Mn_RT_all_3467,edu_14,politicalid_7,STATE,att_7,tblacks_0to10,twhites_0to10,labels)
# use a tidyverse function to read in the included IAT_2019.csv file
tbl <- read_csv('IAT.csv')
tbl_clean <- filter(tbl_clean,D_biep.White_Good_all<0 | D_biep.White_Good_all>0)
tbl_clean <- select(tbl,session_id,gender,raceomb_002,D_biep.White_Good_all,Mn_RT_all_3467,edu_14,politicalid_7,STATE,att_7,tblacks_0to10,twhites_0to10,labels)
tbl_clean <- filter(tbl_clean,D_biep.White_Good_all<0 | D_biep.White_Good_all>0)
tbl_clean <- rename(tbl_clean,id=session_id,race=raceomb_002,bias=D_biep.White_Good_all,rt=Mn_RT_all_3467,edu=edu_14,pol=politicalid_7,state=STATE,att=att_7,temp_b=tblacks_0to10,temp_w=twhites_0to10)
summary(tbl_clean)
tbl_clean$gender <- na_if(tbl_clean$gender,"NA")
tbl_clean$state <- na_if(tbl_clean$state,"NA")
# changing variable types  ---------------------------------------------
# next, convert id and all variables that are character types to factors
# try to convert all variables at once using tidyverse functions
factorVar <- c('id', 'gender')
tbl_clean <- mutate_at(tbl_clean, factorVar, ~factor(.))
# recoding variables  ---------------------------------------------
# participants were instructed to select all the gender idenities that apply to them
# this results in a lot of combinations!
# this pipeline tabulates the number of participants who endorse different gender identities.
gender_count <- tbl_clean %>% group_by(gender) %>% tally()
group_by(gender)
gender
tbl_clean.gender
gender_count <- tbl_clean %>% group_by(gender) %>% tally()
gender_count
gender_count <- arrange(gender_count,-n)
print(gender_count[0:3,1])
dim_gender_count <- dim(gender_count)
tbl_clean$gender4 <- mutate(tbl_clean$gender,3=gender_count[4:dim_gender_count[1],1])
tbl_clean$gender4 <- mutate(tbl_clean$gender,3=gender_count[4:dim_gender_count[1],1])
tbl_clean$gender4 <- mutate(tbl_clean$gender,[3] = gender_count[4:dim_gender_count[1],1])
tbl_clean$gender4 <- mutate(tbl_clean$gender,str(3) = gender_count[4:dim_gender_count[1],1])
tbl_clean$gender4 <- mutate(tbl_clean$gender,other = gender_count[4:dim_gender_count[1],1])
gender_count[4:dim_gender_count[1],1]
tbl_clean$gender4 <- mutate(tbl_clean$gender,other=gender_count[4:dim_gender_count[1],1])
gender_count[4:dim_gender_count[1],1]
dim_gender_count
dim_gender_count[1]
dim_gender_count[1],1
dim_gender_count
[4:dim_gender_count[1]
gender_count[4:dim_gender_count[1],1]
gender_count[4:dim_gender_count[1],1]>0
gender_count
filter(gender_count>1)
tbl_clean <- filter(tbl_clean,D_biep.White_Good_all<0 | D_biep.White_Good_all>0)
tbl_clean$gender4 <- mutate(filter(tbl_clean$gender,other=gender_count[4:dim_gender_count[1],1])
tbl_clean
tbl_clean$gender4 <- mutate(filter(tbl_clean$gender,other=gender_count[4:dim_gender_count[1],1])
)
sum(gender)
sum(4,3)
tbl_clean$gender4 <- mutate(filter(sum(tbl_clean$gender)>2),other=gender_count[4:dim_gender_count[1],1])
tbl_clean$gender4 <- mutate(filter(tbl_clean$gender)>2,other=gender_count[4:dim_gender_count[1],1])
tbl_clean$gender4 <- mutate(tbl_clean$gender,other=filter(tbl_clean$gender)!=1 & tbl_clean$gender!=2)
install.packages("tictoc")
tbl_clean$gender4 <- mutate(tbl_clean$gender,other=filter(tbl_clean$gender)!=1 & tbl_clean$gender!=2)
tbl_clean$gender4 <- mutate(tbl_clean$gender,other=filter(tbl_clean$gender!=1 & tbl_clean$gender!=2))
tbl_clean$gender4 <- recode(tbl_clean$gender,other=filter(tbl_clean$gender!=1 & tbl_clean$gender!=2))
filter(tbl_clean$gender!=1 & tbl_clean$gender!=2)
filter(tbl_clean, gender > 2)
tbl_clean$gender4 <- recode(tbl_clean$gender,other=filter(tbl_clean, gender > 2))
gender>3
gender>2
tbl_clean$gender4 <- recode(tbl_clean$gender,other=filter(tbl_clean, tbl_clean$gender > 2))
sum(gender)_
tbl_clean$gender4 <- recode(tbl_clean$gender,other=filter(tbl_clean, gender!=1 | gender!=2))
tbl_clean$gender4 <- recode(tbl_clean$gender,other=filter(tbl_clean, gender!=1 | gender!=2))
edu_count <- tbl_clean %>% group_by(edu_14) %>% tally()
\edu_count <- tbl_clean %>% group_by(edu_14) %>% tally()
edu_count <- tbl_clean %>% group_by(edu_14) %>% tally()
edu_count <- tbl_clean %>% group_by(edu) %>% tally()
tbl_clean$edu7 <- mutate(tbl_clean$edu, 1='no highschool', 2='some highschool', 3='highschool graduate', 4='some college', 5='postsecondary degree', 6='masters (MA & MBA)', 7='advanced degree')
tbl_clean$edu <- rename(tbl_clean$edu, 1='no highschool', 2='some highschool', 3='highschool graduate', 4='some college', 5='postsecondary degree', 6='masters (MA & MBA)', 7='advanced degree')
tbl_clean$edu <- mutate(tbl_clean$edu, 1='no highschool', 2='some highschool', 3='highschool graduate', 4='some college', 5='postsecondary degree', 6='masters (MA & MBA)', 7='advanced degree')
edu
tbl_clean.edu
tbl_clean$edu
type(tbl_clean$edu)
dtype('lol')
tbl_clean$gender4 <- recode(tbl_clean$gender,other=filter(tbl_clean, gender!=1 | gender!=2))
tbl_clean$gender4 <- recode(tbl_clean$gender,other=filter(tbl_clean, gender!=[1] | gender!=[2]))
tbl_clean$edu <- rename(tbl_clean$edu, str(1)='no highschool', 2='some highschool', 3='highschool graduate', 4='some college', 5='postsecondary degree', 6='masters (MA & MBA)', 7='advanced degree')
edu
tbl_clean$edu
white_men_bias=mean(tbl_clean$bias(tbl_clean$gender==1 & tbl_clean$race==6))
tbl_clean$bias
white_men_bias=filter(tbl_clean$bias, tbl_clean$gender==1 & tbl_clean$race==6)
white_men_bias=filter(tbl_clean, gender==1 & race==6)
white_men_bias
View(white_men_bias)
View(white_men_bias)
white_men_bias = filter(tbl_clean, gender==1 & race==6)
View(white_men_bias)
filter(tbl_clean, gender==1 & race==6)
filter(tbl_clean, gender==1 & race==6)
filter(tbl_clean, gender==1
)
white_men_bias = filter(tbl_clean, gender!=1 & race!=6)
View(white_men_bias)
white_men_bias = filter(tbl_clean, gender==1 & race!=6)
white_men_bias = filter(tbl_clean, gender!=1 & race!=6)
white_men_bias = filter(tbl_clean$bias, gender!=1 & race!=6)
tbl_clean$edu
white_men_bias = mean(tbl_clean$bias(filter(tbl_clean, gender!=1 & race!=6)))
white_men_bias = mean(tbl_clean$bias[filter(tbl_clean, gender!=1 & race!=6))]
white_men_bias = filter(tbl_clean, gender!=1 & race!=6)
View(white_men_bias)
white_men_bias = filter(tbl_clean, gender==[1] & race==6)
white_men_bias = filter(tbl_clean, gender==1 & race==6)
View(white_men_bias)
View(white_men_bias)
tbl_clean$gender==1
tbl_clean$gender==[1]
tbl_clean$gender==(1)
white_men_bias = filter(tbl_clean, gender==1 & race==6)
white_men_bias
gender_count$gender=='1'
gender_count$gender=='[1]'
gender_count$gender=="1"
gender_count$gender
gender_count$gender=={1}
gender_count$gender
typeof(gender_count$gender)
int(1)
integer(1)
integer(3)
typeof(gender_count$n)_
typeof(gender_count$n)
white_men_bias = mean(tbl_clean$bias(filter(tbl_clean, gender==1 & race==6)))
white_men_bias = tbl_clean$bias(filter(tbl_clean, gender==1 & race==6))
select(tbl_clean)white_men_bias = filter(tbl_clean, gender==1 & race==6)
white_men_bias = filter(tbl_clean, gender==1 & race==6)
View(tbl_clean)
# loading libraries  ---------------------------------------------
library(tidyverse)
# reading in IAT data  ---------------------------------------------
data <- read.csv('IAT.csv')
# use a tidyverse function to read in the included IAT_2019.csv file
tbl <- read_csv('IAT.csv')
tbl_clean <- select(tbl,session_id,gender,raceomb_002,D_biep.White_Good_all,Mn_RT_all_3467,edu_14,politicalid_7,STATE,att_7,tblacks_0to10,twhites_0to10,labels)
tbl_clean <- filter(tbl_clean,D_biep.White_Good_all<0 | D_biep.White_Good_all>0)
tbl_clean <- rename(tbl_clean,id=session_id,race=raceomb_002,bias=D_biep.White_Good_all,rt=Mn_RT_all_3467,edu=edu_14,pol=politicalid_7,state=STATE,att=att_7,temp_b=tblacks_0to10,temp_w=twhites_0to10)
summary(tbl_clean)
tbl_clean$gender <- na_if(tbl_clean$gender,"NA")
tbl_clean$state <- na_if(tbl_clean$state,"NA")
# changing variable types  ---------------------------------------------
# next, convert id and all variables that are character types to factors
# try to convert all variables at once using tidyverse functions
factorVar <- c('id', 'gender')
tbl_clean <- mutate_at(tbl_clean, factorVar, ~factor(.))
# recoding variables  ---------------------------------------------
# participants were instructed to select all the gender idenities that apply to them
# this results in a lot of combinations!
# this pipeline tabulates the number of participants who endorse different gender identities.
gender_count <- tbl_clean %>% group_by(gender) %>% tally()
# sort the output and then use indexing to print the 3 most common response (not inlcuding missing values)
gender_count <- arrange(gender_count,-n)
print(gender_count[0:3,1])
# create a new variable that recodes gender to have 4 levels: the 3 most common responses and the others collapsed together
# you can use the key provided on line 31 to understand the levels
# check out recode documentation to see if there's a trick for setting defaults values for unspecified rows
# *note that this excercise in data recoding doesn't reflect the instructors' views on gender identities...
dim_gender_count <- dim(gender_count)
tbl_clean$gender4 <- recode(tbl_clean$gender,other=filter(tbl_clean, gender!=1 | gender!=2)) #does not work
# Now take a look at how highest obtained education is coded (key on line 35)
edu_count <- tbl_clean %>% group_by(edu) %>% tally()
#create a new variable that recodes education into: no highscool, some highschool, highschool graduate, some college, postsecondary degree, masters (MA & MBA), advanced degree
#remember that the recode function isn't always the best solution for numeric variables
tbl_clean$edu <- rename(tbl_clean$edu, 1='no highschool', 2='some highschool', 3='highschool graduate', 4='some college', 5='postsecondary degree', 6='masters (MA & MBA)', 7='advanced degree')
# white men
white_men_bias = filter(tbl_clean, gender==1 & race==6)
View(tbl_clean)
View(white_men_bias)
white_men_bias = filter(tbl_clean, gender!=1 & race!=6)
View(white_men_bias)
white_men_bias = filter(tbl_clean, tbl_clean$gender==1 & tbl_clean$race==6)
View(white_men_bias)
white_men_bias = filter(tbl_clean, tbl_clean$gender!=1 & tbl_clean$race!=6)
white_men_bias = filter(tbl_clean, tbl_clean$gender==1 & tbl_clean$race==6)
mean(tbl_clean$bias)
white_men_bias = filter(mean(tbl_clean$bias), tbl_clean$gender==1 & tbl_clean$race==6)
mean(tbl_clean$bias)
mean(tbl_clean$bias(tbl_clean$gender==1 & tbl_clean$race==6))
tbl_clean$bias(tbl_clean$gender==1 & tbl_clean$race==6)
tbl_clean$bias[tbl_clean$gender==1 & tbl_clean$race==6]
mean(tbl_clean$bias(filter(tbl_clean, tbl_clean$gender==1 & tbl_clean$race==6)))
tbl_clean$edu <- recode(tbl_clean$edu, 1='no highschool', 2='some highschool', 3='highschool graduate', 4='some college', 5='postsecondary degree', 6='masters (MA & MBA)', 7='advanced degree')
white_men_bias = mean(tbl_clean$bias(filter(tbl_clean, tbl_clean$gender==1 & tbl_clean$race==6)))
tbl_clean$gender==1 & tbl_clean$race==6
library(tidyverse)
library(tictoc)
# reading in IAT data  ---------------------------------------------
data <- read.csv('IAT.csv')
# use a tidyverse function to read in the included IAT_2019.csv file
tbl <- read_csv('IAT.csv')
tbl_clean <- select(tbl,session_id,gender,raceomb_002,D_biep.White_Good_all,Mn_RT_all_3467,edu_14,politicalid_7,STATE,att_7,tblacks_0to10,twhites_0to10,labels)
tbl_clean <- filter(tbl_clean,D_biep.White_Good_all<0 | D_biep.White_Good_all>0)
tbl_clean <- rename(tbl_clean,id=session_id,race=raceomb_002,bias=D_biep.White_Good_all,rt=Mn_RT_all_3467,edu=edu_14,pol=politicalid_7,state=STATE,att=att_7,temp_b=tblacks_0to10,temp_w=twhites_0to10)
summary(tbl_clean)
tbl_clean$gender <- na_if(tbl_clean$gender,"NA")
tbl_clean$state <- na_if(tbl_clean$state,"NA")
# changing variable types  ---------------------------------------------
# next, convert id and all variables that are character types to factors
# try to convert all variables at once using tidyverse functions
factorVar <- c('id', 'gender')
tbl_clean <- mutate_at(tbl_clean, factorVar, ~factor(.))
# recoding variables  ---------------------------------------------
# participants were instructed to select all the gender idenities that apply to them
# this results in a lot of combinations!
# this pipeline tabulates the number of participants who endorse different gender identities.
gender_count <- tbl_clean %>% group_by(gender) %>% tally()
# sort the output and then use indexing to print the 3 most common response (not inlcuding missing values)
gender_count <- arrange(gender_count,-n)
print(gender_count[0:3,1])
# create a new variable that recodes gender to have 4 levels: the 3 most common responses and the others collapsed together
# you can use the key provided on line 31 to understand the levels
# check out recode documentation to see if there's a trick for setting defaults values for unspecified rows
# *note that this excercise in data recoding doesn't reflect the instructors' views on gender identities...
dim_gender_count <- dim(gender_count)
tbl_clean$gender4 <- recode(tbl_clean$gender,other=filter(tbl_clean, gender!=1 | gender!=2)) #does not work
# Now take a look at how highest obtained education is coded (key on line 35)
edu_count <- tbl_clean %>% group_by(edu) %>% tally()
#create a new variable that recodes education into: no highscool, some highschool, highschool graduate, some college, postsecondary degree, masters (MA & MBA), advanced degree
#remember that the recode function isn't always the best solution for numeric variables
tbl_clean$edu <- recode(tbl_clean$edu, 1='no highschool', 2='some highschool', 3='highschool graduate', 4='some college', 5='postsecondary degree', 6='masters (MA & MBA)', 7='advanced degree')
# white men
white_men_bias = mean(tbl_clean$bias(filter(tbl_clean, tbl_clean$gender==1 & tbl_clean$race==6)))
print(white_men_bias)
# white women
white_women_bias = mean(tbl_clean$bias(filter(tbl_clean, tbl_clean$gender==2 & tbl_clean$race==6)))
print(white_women_bias)
# advanced degree holders who are men
advanceddegree_men_bias= mean(tbl_clean$bias(filter(tbl_clean, tbl_clean$gender==1 & tbl_clean$edu=='advanced degree')))
print(advanceddegree_men_bias)
# high school graduates who are men
highschoolgraduate_men_bias= mean(tbl_clean$bias(filter(tbl_clean, tbl_clean$gender==1 & tbl_clean$edu=='highschool graduate')))
print(highschoolgraduate_men_bias)
tbl_clean$bias(gender==1)
tbl_clean$bias(tbl_clean$gender==1)
tbl_clean$bias(tbl_clean(gender==1))
tbl_clean(gender==1)
tbl_clean[gender==1]
tbl_clean[tbl_clean$gender==1]
[tbl_clean$gender==1]
tbl_clean$gender4 <- mutate(tbl_clean$gender,other=filter(tbl_clean, gender!=1 | gender!=2)) #does not work
tbl_clean$gender4 <- mutate(tbl_clean$gender,other=filter(tbl_clean, gender!=1 | gender!=2)) #does not work
tbl_clean$edu <- mutate(tbl_clean$edu, 1='no highschool', 2='some highschool', 3='highschool graduate', 4='some college', 5='postsecondary degree', 6='masters (MA & MBA)', 7='advanced degree')
mutate(tbl_clean,gendermutate(tbl_clean,gender4=filter(gender!=1 | gender!=2)) )
mutate(tbl_clean,gender4=filter(gender!=1 | gender!=2))
filter(tbl_clean, gender!=1)
tbl_clean$gender4 <- mutate(tbl_clean,gender4=filter(tbl_clean,gender!=1 | gender!=2)) #does not work
mutate(tbl_clean,gender4=filter(tbl_clean,gender!=1 | gender!=2)) #does not work
tbl_clean$gender4 <- mutate(tbl_clean,gender=filter(tbl_clean,gender!=1 | gender!=2)) #does not work
tbl_clean$gender4 <- mutate(tbl_clean,$gender=filter(tbl_clean,gender!=1 | gender!=2)) #does not work
tbl_clean$gender4 <- mutate(tbl_clean, tbl_clean$gender=filter(tbl_clean,gender!=1 | gender!=2)) #does not work
filter(tbl_clean,gender!=1 | gender!=2)
tbl_clean$gender4 <- mutate(tbl_clean, gender=filter(tbl_clean, tbl_clean$gender!=1 | tbl_clean$gender!=2)) #does not work
tbl_clean$gender4 <- mutate(tbl_clean, tbl_clean$gender=filter(tbl_clean, tbl_clean$gender!=1 | tbl_clean$gender!=2)) #does not work
tbl_clean$gender4 <- mutate(tbl_clean, gender=filter(tbl_clean, gender==1 | gender==2)) #does not work
tbl_clean$gender4 <- mutate(tbl_clean, filter(tbl_clean, gender==1 | gender==2)) #does not work
tbl_clean$gender4 <- mutate(tbl_clean, filter(tbl_clean, gender!=1 | gender!=2)) #does not work
tbl_clean$gender4 <- mutate(tbl_clean, gender=filter(tbl_clean, gender!=1 | gender!=2)) #does not work
tbl_clean$gender4 <- mutate(tbl_clean$gender, filter(tbl_clean, gender!=1 | gender!=2)) #does not work
tbl_clean$gender4 <- mutate(tbl_clean$gender, filter(tbl_clean, gender!=1 | gender!=2)) #does not work
print(highschoolgraduate_men_bias)
# loading libraries  ---------------------------------------------
library(tidyverse)
library(tictoc)
# reading in IAT data  ---------------------------------------------
data <- read.csv('IAT.csv')
# use a tidyverse function to read in the included IAT_2019.csv file
tbl <- read_csv('IAT.csv')
tbl_clean <- select(tbl,session_id,gender,raceomb_002,D_biep.White_Good_all,Mn_RT_all_3467,edu_14,politicalid_7,STATE,att_7,tblacks_0to10,twhites_0to10,labels)
tbl_clean <- filter(tbl_clean,D_biep.White_Good_all<0 | D_biep.White_Good_all>0)
tbl_clean <- rename(tbl_clean,id=session_id,race=raceomb_002,bias=D_biep.White_Good_all,rt=Mn_RT_all_3467,edu=edu_14,pol=politicalid_7,state=STATE,att=att_7,temp_b=tblacks_0to10,temp_w=twhites_0to10)
summary(tbl_clean)
tbl_clean$gender <- na_if(tbl_clean$gender,"NA")
tbl_clean$state <- na_if(tbl_clean$state,"NA")
# changing variable types  ---------------------------------------------
# next, convert id and all variables that are character types to factors
# try to convert all variables at once using tidyverse functions
factorVar <- c('id', 'gender')
tbl_clean <- mutate_at(tbl_clean, factorVar, ~factor(.))
# recoding variables  ---------------------------------------------
# participants were instructed to select all the gender idenities that apply to them
# this results in a lot of combinations!
# this pipeline tabulates the number of participants who endorse different gender identities.
gender_count <- tbl_clean %>% group_by(gender) %>% tally()
# sort the output and then use indexing to print the 3 most common response (not inlcuding missing values)
gender_count <- arrange(gender_count,-n)
print(gender_count[0:3,1])
# create a new variable that recodes gender to have 4 levels: the 3 most common responses and the others collapsed together
# you can use the key provided on line 31 to understand the levels
# check out recode documentation to see if there's a trick for setting defaults values for unspecified rows
# *note that this excercise in data recoding doesn't reflect the instructors' views on gender identities...
dim_gender_count <- dim(gender_count)
tbl_clean$gender4 <- mutate(tbl_clean$gender, filter(tbl_clean, gender!=1 | gender!=2)) #does not work
# Now take a look at how highest obtained education is coded (key on line 35)
edu_count <- tbl_clean %>% group_by(edu) %>% tally()
#create a new variable that recodes education into: no highscool, some highschool, highschool graduate, some college, postsecondary degree, masters (MA & MBA), advanced degree
#remember that the recode function isn't always the best solution for numeric variables
tbl_clean$edu <- mutate(tbl_clean$edu, 1='no highschool', 2='some highschool', 3='highschool graduate', 4='some college', 5='postsecondary degree', 6='masters (MA & MBA)', 7='advanced degree') #does not work
# mutating variables ---------------------------------------------
# rewrite the above recoding steps so that they both occur within a single call of the mutate function
tbl_clean$gender4 <- mutate(tbl_clean, gender=filter(tbl_clean, gender!=1 | gender!=2), edu=recode(1='no highschool', 2='some highschool', 3='highschool graduate', 4='some college', 5='postsecondary degree', 6='masters (MA & MBA)', 7='advanced degree')) #does not work
# white men
white_men_bias = mean(tbl_clean$bias(filter(tbl_clean, tbl_clean$gender==1 & tbl_clean$race==6))) #not work
print(white_men_bias)
# white women
white_women_bias = mean(tbl_clean$bias(filter(tbl_clean, tbl_clean$gender==2 & tbl_clean$race==6))) #not work
print(white_women_bias)
# advanced degree holders who are men
advanceddegree_men_bias= mean(tbl_clean$bias(filter(tbl_clean, tbl_clean$gender==1 & tbl_clean$edu=='advanced degree'))) #not work
print(advanceddegree_men_bias)
# high school graduates who are men
highschoolgraduate_men_bias= mean(tbl_clean$bias(filter(tbl_clean, tbl_clean$gender==1 & tbl_clean$edu=='highschool graduate'))) #not work
print(highschoolgraduate_men_bias)
